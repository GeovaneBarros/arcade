{
  "name": "@113 #05_str L3 - Eribelton e a Ascologia V3 - Busca do m\u00ednimo\n",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@113 #05_str L3 - Eribelton e a Ascologia V3 - Busca do m\u00ednimo</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"str-l3---eribelton-e-a-ascologia-v3---busca-do-m\u00ednimo\"><span class=\"citation\" data-cites=\"113\">@113</span> #05_str L3 - Eribelton e a Ascologia V3 - Busca do m\u00ednimo</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/113/__capa.jpg\" /></p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Diferente da vers\u00e3o 2 em que voc\u00ea ou encontrava um nome perfeito ou digitava estou sem sorte, use a mesma regra de apenas colocar um caractere min\u00fasculo para procurar o melhor valor, mesmo que n\u00e3o seja zero. Se adicionando um caractere n\u00e3o melhorar o valor, deixe sem o caractere adicional.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Uma palavra(max 50 char) com apenas minusculos e mai\u00fasculos sem espa\u00e7os.</li>\n</ul>\n<h3 id=\"saida\">Saida</h3>\n<ul>\n<li>1a linha: o valor da palavra original.</li>\n<li>2a linha: A nova palavra.</li>\n<li>3a linha: o valor ascol\u00f3gico da nova palavra.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\ne\n========\n0\nec\n1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nd\n========\n0\nd\n0\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nAga\n========\n15\nAgaa\n12\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nRufus\n========\n33\nRufuzu\n0\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nAriates\n========\n13\nAriatesa\n10\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=01\ninput=e\noutput=\"0\nec\n1\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=d\noutput=\"0\nd\n0\n\"\ngrade reduction=100%\n\n\ncase=03\ninput=Aga\noutput=\"15\nAgaa\n12\n\"\ngrade reduction=100%\n\n\ncase=04\ninput=Rufus\noutput=\"33\nRufuzu\n0\n\"\ngrade reduction=100%\n\n\ncase=05\ninput=Ariates\noutput=\"13\nAriatesa\n10\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\nint main(void)\n{\n    char c, c2;\n    scanf(\"%c\", &c);\n    int soma_menor = 50, soma = 0;\n    \n    while(c != '\\n'){\n        soma += c;\n        scanf(\"%c\", &c);\n    }\n    \n    printf(\"%d\\n\", soma % 50);\n    \n    for(c = 'a'; c <= 'z'; c++){\n        if( (c + soma) % 50 < soma_menor){\n            soma_menor = (c + soma) % 50;\n            c2 = c;\n        }\n    }\n    \n    printf(\"%c\\n%d\", c2, soma_menor);\n        \n    return 0;\n}"
    }
  ],
  "requiredFile": null
}