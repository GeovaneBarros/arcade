{
  "title": "@066 L3 - Spok Pal\u00edndromo",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@066 L3 - Spok Pal\u00edndromo</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <style>\npre > code.sourceCode { white-space: pre; position: relative; }\npre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\npre > code.sourceCode > span:empty { height: 1.2em; }\ncode.sourceCode > span { color: inherit; text-decoration: inherit; }\ndiv.sourceCode { margin: 1em 0; }\npre.sourceCode { margin: 0; }\n@media screen {\ndiv.sourceCode { overflow: auto; }\n}\n@media print {\npre > code.sourceCode { white-space: pre-wrap; }\npre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n}\npre.numberSource code\n  { counter-reset: source-line 0; }\npre.numberSource code > span\n  { position: relative; left: -4em; counter-increment: source-line; }\npre.numberSource code > span > a:first-child::before\n  { content: counter(source-line);\n    position: relative; left: -1em; text-align: right; vertical-align: baseline;\n    border: none; display: inline-block;\n    -webkit-touch-callout: none; -webkit-user-select: none;\n    -khtml-user-select: none; -moz-user-select: none;\n    -ms-user-select: none; user-select: none;\n    padding: 0 4px; width: 4em;\n    color: #aaaaaa;\n  }\npre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\ndiv.sourceCode\n  {   }\n@media screen {\npre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n}\ncode span.al { color: #ff0000; font-weight: bold; } /* Alert */\ncode span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\ncode span.at { color: #7d9029; } /* Attribute */\ncode span.bn { color: #40a070; } /* BaseN */\ncode span.bu { } /* BuiltIn */\ncode span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\ncode span.ch { color: #4070a0; } /* Char */\ncode span.cn { color: #880000; } /* Constant */\ncode span.co { color: #60a0b0; font-style: italic; } /* Comment */\ncode span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\ncode span.do { color: #ba2121; font-style: italic; } /* Documentation */\ncode span.dt { color: #902000; } /* DataType */\ncode span.dv { color: #40a070; } /* DecVal */\ncode span.er { color: #ff0000; font-weight: bold; } /* Error */\ncode span.ex { } /* Extension */\ncode span.fl { color: #40a070; } /* Float */\ncode span.fu { color: #06287e; } /* Function */\ncode span.im { } /* Import */\ncode span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\ncode span.kw { color: #007020; font-weight: bold; } /* Keyword */\ncode span.op { color: #666666; } /* Operator */\ncode span.ot { color: #007020; } /* Other */\ncode span.pp { color: #bc7a00; } /* Preprocessor */\ncode span.sc { color: #4070a0; } /* SpecialChar */\ncode span.ss { color: #bb6688; } /* SpecialString */\ncode span.st { color: #4070a0; } /* String */\ncode span.va { color: #19177c; } /* Variable */\ncode span.vs { color: #4070a0; } /* VerbatimString */\ncode span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"rep-l3---spok-pal\u00edndromo\">#03_rep L3 - Spok Pal\u00edndromo</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/066/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>A bordo da Enterprise, Spok recebeu a miss\u00e3o de explorar novos planetas.<br />\nCada planeta tem um identificador(ID) \u00fanico.<br />\nComo o combust\u00edvel da nave est\u00e1 pouco, Spok decidiu explorar apenas planetas que possuem ID pal\u00edndromo.<br />\nEnt\u00e3o ele pediu pra voc\u00ea fazer um programa que indique se determinado ID \u00e9 pal\u00edndromo.</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Fazer uma fun\u00e7\u00e3o que recebe um inteiro referente ao ID de um planeta e retorne 1 (true) se o ID \u00e9 pal\u00edndromo e 0 (false) caso contr\u00e1rio.</p>\n<p>Obs.1: Fa\u00e7a essa quest\u00e3o sem usar vetores ou strings.<br />\nObs.2: Um n\u00famero \u00e9 pal\u00edndromo quando o seu inverso \u00e9 igual a ele.<br />\nEx: 121 \u00e9 pal\u00edndromo pois seu inverso \u00e9 121.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Um n\u00famero inteiro que indica o ID.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>1 caso ID seja pal\u00edndromo.</li>\n<li>0 caso contr\u00e1rio.</li>\n</ul>\n<h2 id=\"exemplo\">Exemplo</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n121\n========  \n1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n123\n========\n0\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h2 id=\"dicas\">Dicas</h2>\n<p>Voc\u00ea pode usar as opera\u00e7\u00f5es de m\u00f3dulo e divis\u00e3o para decompor o n\u00famero Com os d\u00edgitos \u201carrancados\u201d, voc\u00ea pode formar um novo n\u00famero utilizando multiplica\u00e7\u00e3o e soma</p>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\"></a>num <span class=\"op\">=</span> <span class=\"bu\">int</span>(<span class=\"bu\">input</span>())</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\"></a>novo <span class=\"op\">=</span> <span class=\"dv\">0</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\"></a><span class=\"cf\">while</span> num <span class=\"op\">&gt;</span> <span class=\"dv\">0</span>:</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\"></a>    dig <span class=\"op\">=</span> num <span class=\"op\">%</span> <span class=\"dv\">10</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\"></a>    num <span class=\"op\">=</span> <span class=\"bu\">int</span>(num <span class=\"op\">/</span> <span class=\"dv\">10</span>)</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\"></a>    novo <span class=\"op\">=</span> novo <span class=\"op\">*</span> <span class=\"dv\">10</span> <span class=\"op\">+</span> dig</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\"></a><span class=\"bu\">print</span>(novo)</span></code></pre></div>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=00\ninput=121\noutput=\"1\n\"\ngrade reduction=100%\n\n\ncase=01\ninput=123\noutput=\"0\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n\nint main () {\n\t\n\tint id;\n\tint aux;\n\tint inverso = 0;\n\t\n\tscanf(\"%d\", &id);\n\t\n\taux = id;\n\twhile (aux > 0){\t\n\t\tinverso = inverso*10 + aux%10;\n\t\taux = aux/10;\n\t}\n\t\n\tif( id == inverso) printf(\"1\\n\");\n\telse printf(\"0\\n\");\n}\n\n"
    }
  ],
  "requiredFile": null
}