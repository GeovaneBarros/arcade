{
  "title": "@142 L2 - Vetor de strings com variados tamanhos",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@142 L2 - Vetor de strings com variados tamanhos</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"alo-l2---vetor-de-strings-com-variados-tamanhos\">$09_alo L2 - Vetor de strings com variados tamanhos</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/142/__capa.jpg\" /></p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Leia um conjunto de strings e aloque apenas a quantidade de mem\u00f3ria necess\u00e1ria para armazenar estas strings. Em seguida ordene e imprima as strings. Somente ser\u00e3o aceitas respostas com aloca\u00e7\u00e3o din\u00e2mica das strings (verifica\u00e7\u00e3o manual).</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Linha 1: n\u00famero de strings.</li>\n<li>Uma linha para cada strings. A linha come\u00e7a com um inteiro indicando quantos caracteres tem a string, seguido de um espa\u00e7o e a string.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<pre><code>- Strings em ordem crescente (ou seja, na ordem do dicion\u00e1rio).</code></pre>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n6\n12 Gilberto Gil\n14 Maria Bet\u00e2nia\n18 Osvaldo Montenegro\n14 Caetano Veloso\n6 Djavan\n12 Marisa Monte\n========\nCaetano Veloso\nDjavan\nGilberto Gil\nMaria Bet\u00e2nia\nMarisa Monte\nOsvaldo Montenegro\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h2 id=\"dicas\">Dicas</h2>\n<ul>\n<li><p>Declare um vetor com n ponteiros para char: char* v[n];</p></li>\n<li><p>Caso queira alocar este vetor dinamicamente, use um vetor contendo ponteiros para caracteres: char <strong>v = (char</strong>) malloc( n * sizeof(char*) );</p></li>\n<li><p>Para cada string, - leia o tamanho da string; - aloque mem\u00f3ria para armazenar esta string (lembre de alocar um caractere a mais para o terminador); - armazene o endere\u00e7o da mem\u00f3ria alocada em v[i] (elemento do vetor); - leia a string e grave em v[i].</p></li>\n<li><p>Para ordenar, - use a fun\u00e7\u00e3o strcmp para verificar se duas strings consecutivas est\u00e3o fora de ordem; - ao trocar duas strings, troque apenas o endere\u00e7o de mem\u00f3ria (n\u00e3o o conte\u00fado); - note que n\u00e3o \u00e9 v\u00e1lido trocar o conte\u00fado, pois as strings n\u00e3o t\u00eam o mesmo tamanho.</p>\n<pre><code>char* v[n];\n    +--+        +-+-+-+-+-+\n    | +--------&gt;|J|O|A|O|0|    v[0] = (char*) malloc(5*sizeof(char));\n    +--+        +-+-+-+-+-+\n    | +--------&gt;\n    +--+        +-+-+-+-+-+-+\n    | +--------&gt;|M|A|R|I|A|0|  v[2] = (char*)malloc(6*sizeof(char));\n    +--+        +-+-+-+-+-+-+\n      .\n      .\n      .\n    +--+\n    |  |\n    +--+</code></pre></li>\n</ul>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=00\ninput=6\n12 Gilberto Gil\n14 Maria Bet\u00e2nia\n18 Osvaldo Montenegro\n14 Caetano Veloso\n6 Djavan\n12 Marisa Monte\noutput=\"Caetano Veloso\nDjavan\nGilberto Gil\nMaria Bet\u00e2nia\nMarisa Monte\nOsvaldo Montenegro\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n   int n, i, j, tam;\n   scanf(\"%d\", &n);\n   char* v[n];\n   \n   for (i = 0; i < n; i++) {\n      scanf(\"%d \", &tam);\n      v[i] = (char*) malloc( (tam+2) * sizeof(char) );\n      if (v[i] == 0) return 1;\n      fgets(v[i], tam+2, stdin);\n   }\n   \n   for (i = 0; i < n; i++)\n      for (j = 0; j < n-1; j++)\n         if (strcmp(v[j],v[j+1]) > 0) {\n            char *aux = v[j+1];\n            v[j+1] = v[j];\n            v[j] = aux;\n         }\n   \n   for (i = 0; i < n; i++) {\n      printf(\"%s\", v[i]);\n      free(v[i]);\n   }\n   \n   return 0;\n}"
    }
  ],
  "requiredFile": null
}