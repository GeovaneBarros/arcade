{
  "title": "@009 L2 - Imprimir vetor formatado",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@009 L2 - Imprimir vetor formatado</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <style>\npre > code.sourceCode { white-space: pre; position: relative; }\npre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\npre > code.sourceCode > span:empty { height: 1.2em; }\ncode.sourceCode > span { color: inherit; text-decoration: inherit; }\ndiv.sourceCode { margin: 1em 0; }\npre.sourceCode { margin: 0; }\n@media screen {\ndiv.sourceCode { overflow: auto; }\n}\n@media print {\npre > code.sourceCode { white-space: pre-wrap; }\npre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n}\npre.numberSource code\n  { counter-reset: source-line 0; }\npre.numberSource code > span\n  { position: relative; left: -4em; counter-increment: source-line; }\npre.numberSource code > span > a:first-child::before\n  { content: counter(source-line);\n    position: relative; left: -1em; text-align: right; vertical-align: baseline;\n    border: none; display: inline-block;\n    -webkit-touch-callout: none; -webkit-user-select: none;\n    -khtml-user-select: none; -moz-user-select: none;\n    -ms-user-select: none; user-select: none;\n    padding: 0 4px; width: 4em;\n    color: #aaaaaa;\n  }\npre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\ndiv.sourceCode\n  {   }\n@media screen {\npre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n}\ncode span.al { color: #ff0000; font-weight: bold; } /* Alert */\ncode span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\ncode span.at { color: #7d9029; } /* Attribute */\ncode span.bn { color: #40a070; } /* BaseN */\ncode span.bu { } /* BuiltIn */\ncode span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\ncode span.ch { color: #4070a0; } /* Char */\ncode span.cn { color: #880000; } /* Constant */\ncode span.co { color: #60a0b0; font-style: italic; } /* Comment */\ncode span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\ncode span.do { color: #ba2121; font-style: italic; } /* Documentation */\ncode span.dt { color: #902000; } /* DataType */\ncode span.dv { color: #40a070; } /* DecVal */\ncode span.er { color: #ff0000; font-weight: bold; } /* Error */\ncode span.ex { } /* Extension */\ncode span.fl { color: #40a070; } /* Float */\ncode span.fu { color: #06287e; } /* Function */\ncode span.im { } /* Import */\ncode span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\ncode span.kw { color: #007020; font-weight: bold; } /* Keyword */\ncode span.op { color: #666666; } /* Operator */\ncode span.ot { color: #007020; } /* Other */\ncode span.pp { color: #bc7a00; } /* Preprocessor */\ncode span.sc { color: #4070a0; } /* SpecialChar */\ncode span.ss { color: #bb6688; } /* SpecialString */\ncode span.st { color: #4070a0; } /* String */\ncode span.va { color: #19177c; } /* Variable */\ncode span.vs { color: #4070a0; } /* VerbatimString */\ncode span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"fun-l2---imprimir-vetor-formatado\">$07_fun L2 - Imprimir vetor formatado</h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/009/__capa.jpg\" /></p>\n<p>Fa\u00e7a uma fun\u00e7\u00e3o <code>print_vet</code> que recebe um vetor e imprime formatado.</p>\n<ul>\n<li>Entrada\n<ul>\n<li>A quantidade N de casos de teste</li>\n<li>Cada caso de teste ter\u00e1 uma linha que inicia com a quantidade Q de elementos do vetor seguida dos elementos.</li>\n</ul></li>\n<li>Sa\u00edda\n<ul>\n<li>Para cada caso de teste o vetor impresso</li>\n</ul></li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n1\n0\n========\n[]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n1\n3 10 16 11\n========\n[10, 16, 11]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n3\n3 10 16 11\n1 88\n4 34 12 32 100\n========\n[10, 16, 11]\n[88]\n[34, 12, 32, 100]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n3 10 16 11\n1 88\n4 34 12 32 100\n0\n========\n[10, 16, 11]\n[88]\n[34, 12, 32, 100]\n[]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n<h2 id=\"c\u00f3digo-inicial\">C\u00f3digo inicial</h2>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb2-1\"><a href=\"#cb2-1\"></a><span class=\"pp\">#include </span><span class=\"im\">&lt;stdio.h&gt;</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\"></a></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\"></a><span class=\"dt\">void</span> print_vet(<span class=\"dt\">int</span> vet, <span class=\"dt\">int</span> size){</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\"></a>    <span class=\"co\">//seu c\u00f3digo aqui</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\"></a>}</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\"></a></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\"></a><span class=\"dt\">int</span> main(){</span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\"></a>    <span class=\"dt\">int</span> qtd = <span class=\"dv\">0</span>;</span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\"></a>    scanf(<span class=\"st\">&quot;%d&quot;</span>, &amp;qtd);</span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\"></a>    <span class=\"cf\">while</span>(qtd--){</span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\"></a>        <span class=\"dt\">int</span> size = <span class=\"dv\">0</span>;</span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\"></a>        scanf(<span class=\"st\">&quot;%d&quot;</span>, &amp;size);</span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\"></a>        <span class=\"dt\">int</span> vet[size];</span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\"></a>        <span class=\"cf\">for</span>(<span class=\"dt\">int</span> i = <span class=\"dv\">0</span>; i &lt; size; i++)</span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\"></a>            scanf(<span class=\"st\">&quot;%d&quot;</span>, &amp;vet[i]);</span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\"></a>        print_vet(vet, size);</span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\"></a>    }</span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\"></a>}</span></code></pre></div>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=00\ninput=1\n0\noutput=\"[]\n\"\ngrade reduction=100%\n\n\ncase=01\ninput=1\n3 10 16 11\noutput=\"[10, 16, 11]\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=3\n3 10 16 11\n1 88\n4 34 12 32 100\noutput=\"[10, 16, 11]\n[88]\n[34, 12, 32, 100]\n\"\ngrade reduction=100%\n\n\ncase=03\ninput=4\n3 10 16 11\n1 88\n4 34 12 32 100\n0\noutput=\"[10, 16, 11]\n[88]\n[34, 12, 32, 100]\n[]\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n\nvoid print_vet(int vet[], int size){\n    printf(\"[\");\n    if(size > 0)\n        printf(\"%d\", vet[0]);\n    for(int i = 1; i < size; i++)\n        printf(\", %d\", vet[i]);\n    printf(\"]\\n\");\n}\n\nint main(){\n    int qtd = 0;\n    scanf(\"%d\", &qtd);\n    while(qtd--){\n        int size = 0;\n        scanf(\"%d\", &size);\n        int vet[size];\n        for(int i = 0; i < size; i++)\n            scanf(\"%d\", &vet[i]);\n        print_vet(vet, size);\n    }\n}"
    }
  ],
  "requiredFile": null
}