{
  "title": "@072 #04_vet L2 - Soldados Pequenos e Grandes!",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@072 #04_vet L2 - Soldados Pequenos e Grandes\\!</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"vet-l2---soldados-pequenos-e-grandes\">#04_vet L2 - Soldados Pequenos e Grandes!</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/072/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Major General Brigadeiro Pretinho quer separar os pequenos soldados dos grandes soldados.<br />\nDepois de muito discutir com o Cabo Tigre Banguela qual o conceito de pequeno e grande eles chegaram em uma conclus\u00e3o favor\u00e1vel.<br />\nPrimeiro precisam calcular a m\u00e9dia de altura dos soldados.<br />\nEnt\u00e3o pequenos s\u00e3o todos os que forem menores que a m\u00e9dia e grandes s\u00e3o todos os que forem maiores que a m\u00e9dia.</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Leia um vetor de inteiros, calcule a m\u00e9dia e imprima para cada valor do vetor se ele \u00e9 menor(P), igual(M) ou maior(G) que a m\u00e9dia.</p>\n<p>Sugest\u00e3o: Fa\u00e7a um fun\u00e7\u00e3o que calcula a m\u00e9dia:</p>\n<p>double media(int vet[], int qtd){<br />\n. . .<br />\n}</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Quantidade de soldados.</li>\n<li>Altura em double de cada soldado.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>M\u00e9dia das altura com duas casas decimais.</li>\n<li>Para cada soldado, imprima \u2018P\u2019 se o mesmo tiver altura menor que a m\u00e9dia, \u2018M\u2019 se for exatamente igual \u00e0 m\u00e9dia e \u2018G\u2019 se for maior que a m\u00e9dia.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n1\n1.30\n========\nM\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n2\n1.70 1.60\n========\n1.65\nG P\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n3\n1.70 1.60 1.8\n========\n1.70\nM P G\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n1.00 1.70 1.60 1.80\n========\n1.53\nP G G G\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=00\ninput=1\n1.30\noutput=\"M\n\"\ngrade reduction=100%\n\n\ncase=01\ninput=2\n1.70 1.60\noutput=\"1.65\nG P\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=3\n1.70 1.60 1.8\noutput=\"1.70\nM P G\n\"\ngrade reduction=100%\n\n\ncase=03\ninput=4\n1.00 1.70 1.60 1.80\noutput=\"1.53\nP G G G\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.py.txt",
      "contents": "#parte 1 - Carregar a entrada em um vetor de floats\n#5 1.65 1.38 1.49 1.65 1.90\nqtd = int(input())\nalturas = input().split() #vetor de floats\n\nalturas_float = []\ncont = 0\nwhile cont < qtd:\n    alturas_float.append(float(alturas[cont]))\n    cont += 1\n\n#parte 2 - Calcular a media \nsoma = 0\nfor elem in alturas_float:\n    soma += elem\n#aqui eu ja tenho a soma\nmedia = soma / len(alturas_float)\nif(int(qtd) > 1):\n    print(\"%.2f\" % media)\n\n#parte 3 - Imprimir pra cada soldado se ele e P, M ou G\nfor elem in alturas_float:\n    if elem < media:# essa e a parte de voces\n        print(\"P\", end = \"\")\n    elif elem == media:\n        print(\"M\", end = \"\")\n    else:\n        print(\"G\", end = \"\")\n    if(elem != alturas_float[qtd - 1]):\n        print(\" \", end = \"\")\nprint()"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n\nint main (){\n\t\n\tint i, n;\n\tdouble media = 0; // o tipo float apresenta erro de precisao em um dos casos teste\n\t\n\tscanf(\"%d\", &n);\n\tdouble altura[n];\n\t\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%lf\", &altura[i] );\n\t\tmedia += altura[i];\n\t}\n\t\n    if(n != 1){\n        media = media / n;\n        printf(\"%.2f\\n\", media);\n    } \n\n\t\n\tfor(i = 0; i < n; i++){\n\t\tif( altura[i] < media )\n            printf(\"P\");\n        else if( altura[i] > media ) \n            printf(\"G\");\n\t\telse \n            printf(\"M\");\n        if(i < n - 1)\n            printf(\" \");\n\t}\n    printf(\"\\n\");\n}"
    }
  ],
  "requiredFile": null
}