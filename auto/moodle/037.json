{
  "title": "@037 L3 - Jokenpo 15",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@037 L3 - Jokenpo 15</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"sel-l3---jokenpo-15\">#02_sel L3 - Jokenpo 15</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>O jokenpo \u00e9 emocionante. Normalmente, as crian\u00e7as aprendem a jogar jokenpo antes de aprenderem par ou \u00edmpar pois \u00e9 mais f\u00e1cil aprender que pedra quebra tesoura do que somar n\u00fameros e descobrir se par ou \u00edmpar. Existem v\u00e1rias varia\u00e7\u00f5es. Uma interessante com 15 n\u00edveis \u00e9 a seguir. Cada elemento ganha de 7 elementos a sua frente e perder de 7 elementos que est\u00e3o antes dele.</p>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/037/__capa.jpg\" /></p>\n<p>Vamos fazer do Human o n\u00famero 0, Tree ser\u00e1 1 e assim sucessivamente. O n\u00famero 3 (sponje) ganha de (4, 5, 6, 7, 8, 9, 10) e perde de (11, 12, 13, 14, 0, 1, 2).</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Dois n\u00fameros, A, B um por linha indicando as escolhas do primeiro e do segundo jogador.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>\u201cEmpate\u201d, \u201cJogador 1\u201d, \u201cJogador 2\u201d</li>\n</ul>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<ul>\n<li>0 \u2264 A, B, C \u2264 14</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n1\n0\n========\nJogador 2\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n5\n9\n========\nJogador 1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n0\n0\n========\nEmpate\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=00\ninput=1\n0\noutput=\"Jogador 2\n\"\ngrade reduction=100%\n\n\ncase=01\ninput=5\n9\noutput=\"Jogador 1\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=0\n0\noutput=\"Empate\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n\nint main(){\n    int jog1 = 0;\n    int jog2 = 0;\n    scanf(\"%d %d\", &jog1, &jog2);\n    \n/* opcao 1\n    if(jog1 == jog2){\n        puts(\"Empate\");\n        return 0;\n    }\n    int dif = jog2 - jog1;\n    if(dif < 0)\n        dif += 15;\n    if(dif <= 7)\n        puts(\"Jogador 1\")\n    else\n        puts(\"Jogador 2\");\n*/\n    \n    //opcao 2\n    if(jog1 == jog2)\n        puts(\"Empate\");\n    else if(((jog2 - jog1) + 15) % 15 <= 7)\n        puts(\"Jogador 1\");\n    else\n        puts(\"Jogador 2\");\n    \n    return 0;\n}\n\n\n\n\n"
    }
  ],
  "requiredFile": null
}