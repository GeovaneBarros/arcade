{
  "name": "@073 #04_vet L3 - Batida Policial - Ordenando vetores",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@073 #04_vet L3 - Batida Policial - Ordenando vetores</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"vet-l3---batida-policial---ordenando-vetores\">#04_vet L3 - Batida Policial - Ordenando vetores</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/073/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Durante a batida policial, capit\u00e3o Nascimento fala:</p>\n<ul>\n<li><p>Perdeu, perdeu, solta as arma, tudo pra parede, em fila, bora bora bora.</p></li>\n<li><p>Zero Um, bota ordem nessa fila!</p></li>\n<li><p>Depois de organizada a fila capit\u00e3o diz:</p></li>\n<li><p>Zero Um, essa fila t\u00e1 horr\u00edvel. Quer voltar a ser aspira Zero UM? Ordena essa fila!</p></li>\n</ul>\n<p>Zero Um arregala os olhos e pergunta:</p>\n<ul>\n<li>Ordenar como capit\u00e3o?</li>\n<li>Coloca esses caras ordenados por idade Zero Um. Os menores v\u00e3o apreendidos, mas os maiores v\u00e3o presos. Vamo vamo vamo!</li>\n</ul>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Implemente uma fun\u00e7\u00e3o que reordena o vetor de inteiros dado como entrada e retorne o vetor ordenado.<br />\nOrdenar \u00e9 fun\u00e7\u00e3o b\u00e1sica na computa\u00e7\u00e3o. Que tal implementar o bubblesort? D\u00ea uma olhadinha na internet e descubra como fazer isso.</p>\n<p>Tamb\u00e9m \u00e9 muito importante que voc\u00ea aprenda como sua linguagem pode fazer a ordena\u00e7\u00e3o por voc\u00ea. Todas as linguagens(C, C++, Python, JavaScript, etc) j\u00e1 tem m\u00e9todos de ordena\u00e7\u00e3o prontos e \u00e9 importante que voc\u00ea aprenda a utiliz\u00e1-los.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li><p>1\u00aa linha: o tamanho do vetor (1 a 50).</p></li>\n<li><p>2\u00aa linha: os elementos desordenados.</p></li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Os elementos do vetor ordenados em ordem crescente.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n8 3 7 4\n========\n3 4 7 8\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n5  \n1 8 3 7 4\n========\n1 3 4 7 8\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=00\ninput=4\n8 3 7 4\noutput=\"3 4 7 8\n\"\ngrade reduction=100%\n\n\ncase=01\ninput=5  \n1 8 3 7 4\noutput=\"1 3 4 7 8\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n\nint main () {\n\t\n\tint i, j;\n\tint n;\n\tint swap;\n\t\n\tscanf(\"%d\", &n);\n\tint vetor[n];\n\t\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &vetor[i]);\n\t\n\t//BubbleSort\n\tfor (i = 0; i < n; i++){\n\t\tfor (j = 0; j < n - 1; j++){\n\t\t\tif (vetor[j+1] < vetor[j]){\n\t\t\t\tswap = vetor[j+1];\n\t\t\t\tvetor[j+1] = vetor[j];\n\t\t\t\tvetor[j] = swap;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (i = 0; i < n; i++){\n\t\tprintf(\"%d\", vetor[i]);\n        if(i < n - 1)\n            printf(\" \");\n\t}\t\n    printf(\"\\n\");\n}"
    },
    {
      "name": "solver.cpp.txt",
      "contents": "#include <iostream>\n\nusing namespace std;\n\nint* ordenar(int v[] , int tam ){\n\tint i,j,aux;\n\tfor (i = 0; i < tam; i++)\n\t{\n\t\tfor (j= i; j < tam; j++)\n\t\t{\n\t\t\tif(v[j] < v[i]){\n\t\t\t\taux = v[i];\n\t\t\t\tv[i] = v[j];\n\t\t\t\tv[j] = aux;\n\t\t\t}\n\t\t}\n    }\n    return v;\n}\n\nint main(){\nint a=0;\n\tint qtd;\n\tcin >> qtd;\n\tint v[qtd];\n\tfor (int i=0; i < qtd; i++)\t{\n\t\tcin >> v[i];\n\t}\n\tordenar(v,qtd);\n\n    for(int j=0; j < qtd ; j++){\n        a = v[j];\n        cout << a;\n        if(j < qtd - 1)\n            cout  << \" \";\n    }\n    cout << endl;\n}\n"
    }
  ],
  "requiredFile": null
}