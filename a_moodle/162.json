{
  "name": "@162 #03_vet L3 - Mini-Poker - OBI2005",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@162 #03_vet L3 - Mini-Poker - OBI2005</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"vet-l3---mini-poker---obi2005\"><span class=\"citation\" data-cites=\"162\">@162</span> #03_vet L3 - Mini-Poker - OBI2005</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/162/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Mini-Poker e\u0301 o nome de um jogo de cartas que e\u0301 uma simplificac\u0327a\u0303o de Poker, um dos mais famosos<br />\njogos de cartas do mundo. Mini-Poker e\u0301 jogado com um baralho normal de 52 cartas, com quatro<br />\nnaipes (copas, paus, espadas e ouro), cada naipe compreendendo treze cartas (A\u0301s, 2, 3, 4, 5, 6, 7, 8,<br />\n9, 10, Valete, Dama, Rei).<br />\nNo in\u0131\u0301cio do jogo, cada jogador recebe cinco cartas. O conjunto de cinco cartas vale um certo<br />\nnu\u0301mero de pontos, de acordo com as regras descritas abaixo. Diferentemente do jogo de Poker normal,<br />\nem Mini-Poker o naipe das cartas e\u0301 desconsiderado. Assim, para simplificar a descric\u0327a\u0303o do jogo, vamos<br />\nutilizar os nu\u0301meros de 1 a 13 para identificar as cartas do baralho, na ordem dada acima. Uma outra<br />\ndiferenc\u0327a e\u0301 que pode ocorrer empate entre mais de um vencedor; nesse caso os vencedores dividem o<br />\npre\u0302mio.<br />\nAs regras para pontuac\u0327a\u0303o em Mini-Poker sa\u0303o as seguintes:<br />\n1. Se as cinco cartas esta\u0303o em sequ\u0308e\u0302ncia a partir da carta x (ou seja, os valores das cartas sa\u0303o<br />\nx, x + 1, x + 2, x + 3 e x + 4), a pontuac\u0327a\u0303o e\u0301 x + 200 pontos. Por exemplo, se as cartas recebidas<br />\nsa\u0303o 10, 9, 8, 11 e 12, a pontuac\u0327a\u0303o e\u0301 208 pontos.<br />\n2. Se ha\u0301 quatro cartas iguais x (uma quadra, ou seja, os valores das cartas sa\u0303o x, x, x, x e y), a<br />\npontuac\u0327a\u0303o e\u0301 x + 180 pontos. Por exemplo, se as cartas recebidas sa\u0303o 1, 1, 1, 10 e 1, a pontuac\u0327a\u0303o<br />\ne\u0301 181 pontos.<br />\n3. Se ha\u0301 tre\u0302s cartas iguais x e duas outras cartas iguais y (uma trinca e um par, ou seja, os valores<br />\ndas cartas sa\u0303o x, x, x, y e y), a pontuac\u0327a\u0303o e\u0301 x + 160 pontos. Por exemplo, se as cartas recebidas<br />\nsa\u0303o 10, 4, 4, 10 e 4, a pontuac\u0327a\u0303o e\u0301 164 pontos.<br />\n4. Se ha\u0301 tre\u0302s cartas iguais x e duas outras cartas diferentes y e z (uma trinca, ou seja, os valores<br />\ndas cartas sa\u0303o x, x, x, y e z), a pontuac\u0327a\u0303o e\u0301 x + 140 pontos. Por exemplo, se as cartas recebidas<br />\nsa\u0303o 2, 3, 2, 2 e 13, a pontuac\u0327a\u0303o e\u0301 142 pontos.<br />\n5. Se ha\u0301 duas cartas iguais x, duas outras cartas iguais y (x 6= y) e uma outra carta distinta z (dois<br />\npares, ou seja, os valores das cartas sa\u0303o x, x, y, y e z), a pontuac\u0327a\u0303o e\u0301 3 \u00d7 x + 2 \u00d7 y + 20 pontos,<br />\nem que x &gt; y Por exemplo, se as cartas recebidas sa\u0303o 12, 7, 12, 8 e 7, a pontuac\u0327a\u0303o e\u0301 70 pontos.<br />\n6. Se ha\u0301 apenas duas cartas iguais x e as outras sa\u0303o todas distintas (um par, ou seja, os valores das<br />\ncartas sa\u0303o x, x, y, z e t), a pontuac\u0327a\u0303o e\u0301 x pontos. Por exemplo, se as cartas recebidas sa\u0303o 12, 13,<br />\n5, 8 e 13, a pontuac\u0327a\u0303o e\u0301 13 pontos.<br />\n7. Se todas as cartas sa\u0303o distintas, na\u0303o ha\u0301 pontuac\u0327a\u0303o.</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Escreva um programa que, fornecidas as cartas dadas a um jogador, calcule pontuac\u0327a\u0303o do jogador<br />\nnaquela jogada.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A entrada e\u0301 composta por va\u0301rios casos de teste, cada um correspondendo a uma jogada. A primeira linha da entrada conte\u0301m um inteiro N que indica o nu\u0301mero de casos de teste (1 \u2264 N \u2264 10). Cada uma das N linhas seguintes conte\u0301m cinco nu\u0301meros inteiros C1 , C2 , C3 , C4 e C5 , representando as cinco cartas recebidas por um jogador (1 \u2264 C1 , C2 , C3 , C4 , C5 \u2264 13). A entrada deve ser lida do dispositivo de entrada padra\u0303o (normalmente o teclado).</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Para cada caso de teste da entrada, seu programa deve produzir tre\u0302s linhas na sa\u0131\u0301da. A primeira linha deve conter um identificador do caso de teste, no formato \u201cTeste n\u201d, onde n e\u0301 numerado sequ\u0308encialmente a partir de 1. A segunda linha deve conter a pontuac\u0327a\u0303o do jogador considerando as cinco cartas recebidas. A terceira linha deve ser deixada em branco. A grafia mostrada no Exemplo de Sa\u0131\u0301da, abaixo, deve ser seguida rigorosamente. A sa\u0131\u0301da deve ser escrita no dispositivo de sa\u0131\u0301da padra\u0303o (normalmente a tela).</li>\n</ul>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<p>1 \u2264 N \u2264 100<br />\n1 \u2264 C1 , C2 , C3 , C4 , C5 \u2264 13</p>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n5\n1 2 3 4 5\n10 2 10 2 3\n1 2 3 5 4\n10 10 3 2 3\n1 2 1 2 3\n========\nTeste 1\n201\n\nTeste 2\n54\n\nTeste 3\n201\n\nTeste 4\n56\n\nTeste 5\n28\n\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=01\ninput=5\n1 2 3 4 5\n10 2 10 2 3\n1 2 3 5 4\n10 10 3 2 3\n1 2 1 2 3\noutput=\"Teste 1\n201\n\nTeste 2\n54\n\nTeste 3\n201\n\nTeste 4\n56\n\nTeste 5\n28\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include<stdio.h>\n\n#define NCARTAS 5\n\nint main()\n{\n   int teste=0; /* Teste atual */\n   int ntestes; /* Numero de casos de testes */\n   int cartas[NCARTAS]; /* Cartas recebidas */\n   int carta; /* Carta atual */\n   int achei; /* Define quando achou jogada */\n   int pontuacao; /* Pontuacao final */\n   int x,y; /* Indicadores de maior e menor no Dois Pares */\n   int i,j,k; /* Iteradores */\n\n   scanf(\"%d\", &ntestes);\n   while(ntestes > 0) { /* Termina quando ntestes for 0 */\n      printf(\"Teste %d\\n\", ++teste);\n\n      pontuacao=0; /* Considera que nao ganhou nada, inicialmente */\n\n      for(i=0;i<NCARTAS;i++) { /* Le as cartas e ja as ordena */\n         scanf(\"%d\",&carta);\n         for(j=0;j<i;j++) { /* Inserindo na ordem */\n            if(carta<cartas[j])\n            {\n               for(k=i;k>j;k--) cartas[k]=cartas[k-1]; /* Deslocamento */\n               cartas[j]=carta;\n               j=i; /* Fim do for */\n               carta=0; /* Indica que a carta foi inserida */\n            }\n         }\n         if(carta) cartas[i]=carta;\n      }\n\n      /* Validacao das cartas */\n\n      /* Sequencia: 200+x */\n      achei=1; /* Sera zerado se constar erro na sequencia */\n      for(i=0;i<NCARTAS-1;i++)\n      {\n         if((cartas[i+1]-cartas[i])!=1)\n         {\n            achei=0;\n            i=NCARTAS; /* Fim do for */\n         }\n      }\n      if(achei) pontuacao=200+cartas[0];\n      else /* Quadra: 180+x */\n      {\n         achei=0;\n         for(i=0;i<NCARTAS-3;i++)\n         {\n            if((cartas[i]==cartas[i+1])&&\n               (cartas[i+1]==cartas[i+2])&&\n               (cartas[i+2]==cartas[i+3]))\n            {\n               achei=1;\n               i=NCARTAS+i; /* Fim do for */\n            }\n         }\n         if(achei) pontuacao=180+cartas[i-NCARTAS];\n         else /* Full house: 160+x (x==trinca) */\n         {\n            achei=0;\n            if((cartas[0]==cartas[1])&&\n               (cartas[1]==cartas[2])&& /* Trinca */\n               (cartas[3]==cartas[4])) /* Par */\n            {\n               achei=1;\n               i=0;\n            }\n            else if((cartas[0]==cartas[1])&& /* Par */\n                    (cartas[2]==cartas[3])&&\n                    (cartas[3]==cartas[4])) /* Trinca */\n            {\n               achei=1;\n               i=4;\n            }\n            if(achei) pontuacao=160+cartas[i];\n            else /* Trinca: 140+x */\n            {\n               achei=0;\n               for(i=0;i<NCARTAS-2;i++)\n               {\n                  if((cartas[i]==cartas[i+1])&&\n                     (cartas[i+1]==cartas[i+2]))\n                  {\n                     achei=1;\n                     i=NCARTAS+i; /* Fim do for */\n                  }\n               }\n               if(achei) pontuacao=140+cartas[i-NCARTAS];\n               else /* Dois pares: 20+3x+2y (x>y) */\n               {\n                  x=y=0;\n                  for(i=0;i<NCARTAS-1;i++)\n                  {\n                     if(cartas[i]==cartas[i+1])\n                     {\n                        y=x; /* Garante que x seja o maior */\n                        x=cartas[i];\n                     }\n                  }\n                  if(x && y) pontuacao=20+3*x+2*y;\n                  else /* Um par: x */\n                  {\n                     achei=0;\n                     for(i=0;i<NCARTAS-1;i++)\n                     {\n                        if(cartas[i]==cartas[i+1])\n                        {\n                           achei=1;\n                           i=NCARTAS+i; /* Fim do for */\n                        }\n                     }\n                     if(achei) pontuacao=cartas[i-NCARTAS];\n                  }\n               }\n            }\n         }\n      }\n\n      printf(\"%d\\n\\n\", pontuacao);\n\n      ntestes--; /* Vai para o proximo teste */\n   }\n\n   return 0;\n}\n"
    }
  ],
  "requiredFile": null
}