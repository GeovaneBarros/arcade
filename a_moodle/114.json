{
  "name": "@114 #05_str L3 - MeU WoRd QuEbRoU - Formata\u00e7\u00e3o de Case!",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@114 #05_str L3 - MeU WoRd QuEbRoU - Formata\u00e7\u00e3o de Case\\!</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"str-l3---meu-word-quebrou---formata\u00e7\u00e3o-de-case\">#05_str L3 - MeU WoRd QuEbRoU - Formata\u00e7\u00e3o de Case!</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/114/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>O seu editor de texto deu problema. Seu orientador pediu que voc\u00ea formatasse toda uma se\u00e7\u00e3o do seu trabalho em caixa alta. Como voc\u00ea \u00e9 um fant\u00e1stico programador resolveu logo fazer algo mais completo.</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Dado um texto, formate como for pedido (M - Toda mai\u00fascula, m - toda minuscula, p - primeira mai\u00fascula, i - inverter case). Observe que no primeiro mai\u00fascula deixa como minuscula palavras de tamanho 1 como os artigos \u2018a\u2019, \u2018e\u2019, \u2018o\u2019.</p>\n<p>Ignore pontua\u00e7\u00e3o, espa\u00e7o e n\u00fameros.</p>\n<p>A entrada \u00e9 composta de minusculas, mai\u00fasculas, n\u00fameros, pontua\u00e7\u00f5es e espa\u00e7os simples.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Texto com at\u00e9 100 caracteres.</li>\n<li>Caracteres representando a formata\u00e7\u00e3o (M, m, p, i).</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>O texto formatado.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nO Pato e o frango ja tao cozidos, comam!\nM\n========\nO PATO E O FRANGO JA TAO COZIDOS, COMAM!\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nO Pato e o frango ja tao cozidos, comam!\nm\n========\no pato e o frango ja tao cozidos, comam!\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nO Pato e o frango ja tao cozidos, comam!\np\n========\no Pato e o Frango Ja Tao Cozidos, Comam!\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nO Pato e o frango ja tao cozidos, comam!\ni\n========\no pATO E O FRANGO JA TAO COZIDOS, COMAM!\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=00\ninput=O Pato e o frango ja tao cozidos, comam!\nM\noutput=\"O PATO E O FRANGO JA TAO COZIDOS, COMAM!\n\"\ngrade reduction=100%\n\n\ncase=01\ninput=O Pato e o frango ja tao cozidos, comam!\nm\noutput=\"o pato e o frango ja tao cozidos, comam!\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=O Pato e o frango ja tao cozidos, comam!\np\noutput=\"o Pato e o Frango Ja Tao Cozidos, Comam!\n\"\ngrade reduction=100%\n\n\ncase=03\ninput=O Pato e o frango ja tao cozidos, comam!\ni\noutput=\"o pATO E O FRANGO JA TAO COZIDOS, COMAM!\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n    \nchar minusculo (char c){\n    if(c >= 'A' && c <= 'Z')\n        return c + ('a' - 'A');\n    return c;\n}\n\nchar maiusculo (char c){\n    if(c >= 'a' && c <= 'z')\n        return c - ('a' - 'A');\n    return c;\n}\n\nint main (){\n    int i;\n    \n    char texto[100];\n    char opcao;\n    \n    scanf(\"%99[^\\n]\\n\", texto);\n    scanf(\"%c\", &opcao);\n    \n    switch (opcao){\n        \n        case 'm':\n            for(i = 0; texto[i] != 0; i++)\n                printf(\"%c\", minusculo(texto[i]));\n            break;\n        \n        case 'M':\n            for(i = 0; texto[i] != 0; i++)\n                printf(\"%c\", maiusculo(texto[i]));\n            break;\n            \n        case 'p':\n            \n            if(texto[1] != ' ') printf(\"%c\", maiusculo(texto[0]) );\n            else printf(\"%c\", minusculo(texto[0]) );\n                        \n            for(i = 1; texto[i] != 0; i++){\n                if(texto[i-1] == ' ' && texto[i+1] != ' ') printf(\"%c\", maiusculo(texto[i]) );\n                else printf(\"%c\", minusculo(texto[i]));\n            }\n            break;\n        \n        case 'i':\n            for(i = 0; texto[i] != 0; i++){\n                if(texto[i] >= 'a' && texto[i] <= 'z') printf(\"%c\", maiusculo(texto[i]) );\n                else if(texto[i] >= 'A' && texto[i] <= 'Z') printf(\"%c\", minusculo(texto[i]));\n                else printf(\"%c\", texto[i]);\n            }\n            break;\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"
    }
  ],
  "requiredFile": null
}