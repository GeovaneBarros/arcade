{
  "name": "@119 #05_str L3 - Mat\u00e9ria e Antimat\u00e9ia - Colis\u00e3o entre palavras!",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@119 #05_str L3 - Mat\u00e9ria e Antimat\u00e9ia - Colis\u00e3o entre palavras\\!</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"str-l3---mat\u00e9ria-e-antimat\u00e9ia---colis\u00e3o-entre-palavras\">#05_str L3 - Mat\u00e9ria e Antimat\u00e9ia - Colis\u00e3o entre palavras!</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/119/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Marquinhos (12 anos) chega em casa e fala pro seu irm\u00e3o mais velho:<br />\n- L\u00e1 no consult\u00f3rio do dentista, vi numa revista que existe antimat\u00e9ria!!!<br />\nEla destroi toda mat\u00e9ria que toca e os dois desaparecem.<br />\nO irm\u00e3o mais velho responde alfinetando.<br />\n- Saquei, ent\u00e3o voc\u00ea \u00e9 o meu irm\u00e3o antimat\u00e9ria. Toda vez que voc\u00ea vai brincar, voc\u00ea quebra tudo que toca e some! Vai estudar Marquinhos!</p>\n<p>Marquinhos, indignado prop\u00f4s ao seu irm\u00e3o \u201csabido\u201d o seguinte desafio:<br />\nIrm\u00e3o, imagine duas palavras, a primeira vai ser a mat\u00e9ria e a segunda a antimat\u00e9ria.</p>\n<p>Quando as duas se encontram e o final de uma string \u00e9 igual ao come\u00e7o de outra, anule-os como se fosse uma colis\u00e3o.<br />\nComo se voc\u00ea juntasse as duas palavras, mas exclu\u00edsse as letras at\u00e9 que n\u00e3o sejam iguais as letras de contato.</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Fa\u00e7a um programa que dado duas palavra, a mat\u00e9ria e a anti-mat\u00e9ria, imprima no final somente as letras que est\u00e3o na, mat\u00e9ria mas n\u00e3o est\u00e3o na antimat\u00e9ria.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Duas palavras, uma por linha.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>A colis\u00e3o entre as palavras.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;  \nmel\nlema\n========\na\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;  \npegasus\nsuspiro\n========\npegapiro\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;  \nolho\nohio\n========  \nolio\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nminhoca\narvore\n========\nminhocrvore\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=00\ninput=mel\nlema\noutput=\"a\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=olho\nohio\noutput=\"olio\n\"\ngrade reduction=100%\n\n\ncase=03\ninput=minhoca\narvore\noutput=\"minhocrvore\n\"\ngrade reduction=100%\n\n\ncase=01\ninput=pegasus\nsuspiro\noutput=\"pegapiro\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n#include <string.h>\n\nint main () {\n\tint i;\n\tchar palavra1[100];\n\tchar palavra2[100];\n\tscanf(\"%100[^\\n]\\n\", palavra1);\n\tscanf(\"%100[^\\n]\", palavra2);\n\tint colisoes = 0;\n\t\n\tfor(i = 0; palavra2[i] == palavra1[strlen(palavra1) -i -1]; i++){\n\t\tcolisoes++;\n\t}\n\t\n\tfor(i = 0; i < strlen(palavra1) - colisoes; i++){\n\t\tprintf(\"%c\", palavra1[i]);\n\t}\n\t\n\tfor(i = colisoes; palavra2[i]; i++){\n\t\tprintf(\"%c\", palavra2[i]);\n\t}\n    printf(\"\\n\");\n\treturn 0;\n}"
    },
    {
      "name": "solver.cpp.txt",
      "contents": "#include <iostream>\n#include <string.h>\nusing namespace std;\n\nstring colisaoString(string one, string two) {\n    int cont = 0;\n    int tam1 = one.size();\n    int tam2 = two.size();\n    int i1 = tam1 - 1;\n    int i2 = 0;\n    //contando quantos caracteres sao comuns\n    while(one[i1] == two[i2]){\n        cont++;\n        i1--;\n        i2++;\n        if(i1 < 0 or i2 >= tam2 )\n            break;\n    }\n    string saida = one.substr(0, i1 + 1) + two.substr(i2, tam2);\n    return saida;\n}\n\nint main()\n{\n    string A, B;\n    cin >> A >> B;\n    cout << colisaoString(A, B) << endl;\n}\n\n"
    }
  ],
  "requiredFile": null
}