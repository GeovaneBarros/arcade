{
  "name": "@076 #04_vet L3 - OBI 2017 - Fase 1 - O segredo do Cofre",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@076 #04_vet L3 - OBI 2017 - Fase 1 - O segredo do Cofre</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"vet-l3---obi-2017---fase-1---o-segredo-do-cofre\">#04_vet L3 - OBI 2017 - Fase 1 - O segredo do Cofre</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/076/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>O sistema de segredo para abrir esse cofre \u00e9 bastante complexo. Ao inv\u00e9s de girar um bot\u00e3o v\u00e1rias vezes, como a gente v\u00ea normalmente nos filmes, o dono do cofre tem que deslizar um controle para a esquerda e para a direita, em cima de uma barra, v\u00e1rias vezes, parando em determinadas posi\u00e7\u00f5es. A barra possui N posi\u00e7\u00f5es e cada posi\u00e7\u00e3o cont\u00e9m um n\u00famero inteiro entre 0 e 9, inclusive. No exemplo da figura, a barra tem 14 posi\u00e7\u00f5es e o controle est\u00e1 na posi\u00e7\u00e3o 1.</p>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/076/__cofre.png\" /></p>\n<p>O segredo vai depender de quantas vezes cada um dos dez inteiros entre 0 e 9 vai aparecer dentro do controle. Por exemplo, suponha que o dono deslize o controle da posi\u00e7\u00e3o inicial 1 at\u00e9 a posi\u00e7\u00e3o 9, depois para a posi\u00e7\u00e3o 4, depois para a posi\u00e7\u00e3o 11 e por fim at\u00e9 a posi\u00e7\u00e3o 13. Veja que o inteiro 1, por exemplo, vai aparecer seis vezes dentro do controle; e o inteiro 9 vai aparecer quatro vezes.</p>\n<p>Dada a sequ\u00eancia de inteiros na barra e a sequ\u00eancia de posi\u00e7\u00f5es entre as quais o dono desliza o controle, come\u00e7ando da posi\u00e7\u00e3o inicial 1, seu programa deve contar quantas vezes cada inteiro, entre 0 e 9, vai aparecer dentro do controle.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A primeira linha da entrada cont\u00e9m dois inteiros N e M, representando o n\u00famero de posi\u00e7\u00f5es na barra do cofre e o n\u00famero de posi\u00e7\u00f5es na sequ\u00eancia que o dono vai seguir para deslizar o controle. A segunda linha cont\u00e9m N inteiros entre 0 e 9, definindo a barra do cofre. A terceira linha cont\u00e9m M inteiros representando a sequ\u00eancia de posi\u00e7\u00f5es que o dono vai seguir. A primeira posi\u00e7\u00e3o nessa sequ\u00eancia \u00e9 sempre 1 e n\u00e3o h\u00e1 duas posi\u00e7\u00f5es consecutivas iguais.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Seu programa deve imprimir uma linha contendo 10 inteiros, representando o n\u00famero de vezes que cada inteiro, entre 0 e 9, vai aparecer no controle da barra.</li>\n</ul>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<ul>\n<li>2 \u2264 N \u2264 105 e 2 \u2264 M \u2264 105</li>\n</ul>\n<h2 id=\"informa\u00e7\u00f5es-sobre-a-pontua\u00e7\u00e3o\">Informa\u00e7\u00f5es sobre a pontua\u00e7\u00e3o</h2>\n<ul>\n<li>Em um conjunto de testes somando 40 pontos, N \u2264 1000 e M \u2264 1000</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n14 5\n9 4 3 9 1 2 4 5 1 1 9 7 0 5\n1 9 4 11 13\n========\n[ 1 6 3 1 4 3 0 1 0 4 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n5 4\n5 8 0 5 1\n1 4 2 5\n========\n[ 3 1 0 0 0 3 0 0 2 0 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=01\ninput=5 4\n5 8 0 5 1\n1 4 2 5\noutput=\"[ 3 1 0 0 0 3 0 0 2 0 ]\n\"\ngrade reduction=100%\n\n\ncase=00\ninput=14 5\n9 4 3 9 1 2 4 5 1 1 9 7 0 5\n1 9 4 11 13\noutput=\"[ 1 6 3 1 4 3 0 1 0 4 ]\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n\nvoid contar(int origem, int dest, int barra[], int ocor[]){\n    if(dest < origem){\n        int aux = dest;\n        dest = origem;\n        origem = aux;\n    }\n    for(int i = origem; i <= dest; i++)\n        ocor[barra[i]] += 1;\n}\n\nint main(){\n    int ocor[10];\n    for(int i = 0; i < 10; i++)\n        ocor[i] = 0;\n    int barra_size = 0, qtd_mov = 0;\n    scanf(\"%d %d\", &barra_size, &qtd_mov);\n    barra_size += 1;\n    int barra[barra_size];\n    int mov[qtd_mov];\n    for(int i = 1; i < barra_size; i++)\n        scanf(\"%d\", &barra[i]);\n    for(int i = 0; i < qtd_mov; i++)\n        scanf(\"%d\", &mov[i]);\n\n    for(int i = 0; i < qtd_mov - 1; i++){\n        if(i > 0)\n            ocor[barra[mov[i]]] -= 1;\n        contar(mov[i], mov[i + 1], barra, ocor);\n    }\n    printf(\"[ \");\n    for(int i = 0; i < 10; i++)\n        printf(\"%d \", ocor[i]);\n    printf(\"]\\n\");\n}"
    }
  ],
  "requiredFile": null
}