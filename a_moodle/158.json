{
  "name": "@158 #03_rep L3 - Trilhas - OBI 2005",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@158 #03_rep L3 - Trilhas - OBI 2005</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"rep-l3---trilhas---obi-2005\"><span class=\"citation\" data-cites=\"158\">@158</span> #03_rep L3 - Trilhas - OBI 2005</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/158/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Nos finais de semana Paulo faz longas caminhadas pelas bonitas trilhas que atravessam as matas<br />\nvizinhas a\u0300 sua cidade. Recentemente Paulo adquiriu um aparelho de GPS (siglas do ingle\u0302s Sistema<br />\nde Posicionamento Global) e com ele mapeou as mais belas trilhas da regia\u0303o. Paulo programou o<br />\nGPS para armazenar, a intervalos regulares, a altitude do ponto corrente durante o trajeto. Assim,<br />\napo\u0301s percorrer as trilhas com o seu GPS, Paulo tem informac\u0327o\u0303es que permitem por exemplo produzir<br />\ngra\u0301ficos como os abaixo:</p>\n<p>Paulo tem uma nova namorada, e quer convence\u0302-la a passear junto com ele pelas trilhas. Para o<br />\nprimeiro passeio juntos, Paulo quer escolher uma trilha \u201cfa\u0301cil\u201d. Segundo o seu crite\u0301rio, a trilha mais<br />\nfa\u0301cil e\u0301 a que, em um dos sentidos do percurso, exige o menor esforc\u0327o de subida. O esforc\u0327o exigido em<br />\num trecho de subida e\u0301 proporcional ao desn\u0131\u0301vel do trecho.</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Dadas as informac\u0327o\u0303es colhidas por Paulo sobre dista\u0302ncias e altitudes de um conjunto de trilhas, voce\u0302<br />\ndeve escrever um programa que determine qual e\u0301 a trilha que exige o menor esforc\u0327o de subida.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A primeira linha da entrada conte\u0301m um nu\u0301mero inteiro N que indica o nu\u0301mero de trilhas. Cada uma das N linhas seguintes conte\u0301m a descric\u0327a\u0303o de uma trilha (1 \u2264 N \u2264 100). As trilhas sa\u0303o identificadas por nu\u0301meros de 1 a N . A ordem em que as trilhas aparecem na entrada determina os seus identificadores (a primeira trilha e\u0301 a de nu\u0301mero 1, a segunda a de nu\u0301mero 2, a u\u0301ltima a de nu\u0301mero N ). A descric\u0327a\u0303o de uma trilha inicia com um nu\u0301mero inteiro M que indica a quantidade de pontos de medic\u0327a\u0303o da trilha (2 \u2264 M \u2264 1000), seguido de M nu\u0301meros inteiros Hi representando a altura dos pontos da trilha (medidos a intervalos regulares e iguais para todas as linhas). Paulo pode percorrer a trilha em qualquer sentido (ou seja, partindo do ponto de altitude H1 em direc\u0327a\u0303o ao ponto de altitude HM , ou partindo do ponto de altitude HM em direc\u0327a\u0303o ao ponto de altitude H1 ). A entrada deve ser lida do dispositivo de entrada padra\u0303o (normalmente o teclado).</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Seu programa deve produzir uma u\u0301nica linha na sa\u0131\u0301da, contendo um nu\u0301mero inteiro representando o<br />\nidentificador da melhor trilha, conforme determinado pelo seu programa. Em caso de empate entre<br />\nduas ou mais trilhas, imprima a de menor identificador.<br />\nA sa\u0131\u0301da deve ser escrita no dispositivo de sa\u0131\u0301da padra\u0303o (normalmente a tela).</li>\n</ul>\n<p>\fOlimp\u0131\u0301ada Brasileira de Informa\u0301tica - OBI2005 - Modalidade Programac\u0327a\u0303o N\u0131\u0301vel 1</p>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<p>1 \u2264 N \u2264 100<br />\n2 \u2264 M \u2264 1000<br />\n0 \u2264 Hi \u2264 1000</p>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n5\n10 60 60 70 70 70 70 80 90 90 100\n4 498 500 498 498\n5 200 190 180 170 160\n2 1000 900\n4 20 20 20 20\n========\n5\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=01\ninput=5\n10 60 60 70 70 70 70 80 90 90 100\n4 498 500 498 498\n5 200 190 180 170 160\n2 1000 900\n4 20 20 20 20\noutput=\"5\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\nint main(){\n    int nTrilhas = 0;\n    scanf(\"%d\", &nTrilhas);\n    int melhor = 0;\n    int oudContador = 99999;\n    for(int i = 1; i <= nTrilhas; i++){\n        int contador = 0;\n        int oudPonto = 0;\n        int tanTrilha = 0;\n        int ponto = 0;\n        scanf(\"%d\", &tanTrilha);\n        for(int x = 0; x < tanTrilha; x++){\n            scanf(\"%d\", &ponto);\n            if(x == 0){\n                oudPonto = ponto;\n            }else{\n                if(ponto != oudPonto){\n                    if(ponto > oudPonto){\n                        int aux = 0;\n                        aux = ponto - oudPonto;\n                        oudPonto = ponto;\n                        contador += aux;\n                    }else if(ponto < oudPonto){\n                        int aux = 0;\n                        aux = oudPonto - ponto;\n                        oudPonto = ponto;\n                        contador += aux;\n                    }else if(ponto == oudPonto){\n                        oudPonto = ponto;\n                    }\n                }\n            }\n        }\n        if(i == 1){\n            oudContador = contador;\n            melhor = i;\n\n        }\n        if(contador < oudContador){\n            oudContador = contador;\n            melhor = i;\n        }\n    }\n    printf(\"%d\\n\", melhor);\n}"
    }
  ],
  "requiredFile": null
}