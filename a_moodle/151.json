{
  "name": "@151 #02_sel L1 - OBI 2015 - Fase 2 - N\u00edvel 1 - Impedido!",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@151 #02_sel L1 - OBI 2015 - Fase 2 - N\u00edvel 1 - Impedido\\!</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"sel-l1---obi-2015---fase-2---n\u00edvel-1---impedido\"><span class=\"citation\" data-cites=\"151\">@151</span> #02_sel L1 - OBI 2015 - Fase 2 - N\u00edvel 1 - Impedido!</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>A regra do impedimento no futebol pode parecer estranha, mas sem ela, se a gente pensar bem, o jogo ficaria muito chato! Ela funciona dadas as posi\u00e7\u00f5es de tr\u00eas jogadores: L o jogador atacante que lan\u00e7a a bola; R o jogador atacante que recebe a bola; e D o \u00faltimo jogador defensor. E a regra vale somente se o jogador R est\u00e1 no seu campo de ataque; se o jogador R est\u00e1 no seu campo de defesa ou na linha divis\u00f3ria do meio campo, ele n\u00e3o est\u00e1 em impedimento. Neste problema o campo tem 100 metros de comprimento. Dadas as posi\u00e7\u00f5es desses tr\u00eas jogadores, no momento exato do lan\u00e7amento, haver\u00e1 impedimento se e somente se a seguinte condi\u00e7\u00e3o for verdadeira: <strong>(R&gt;50) e (L&lt; R) e (R &gt; D)</strong>.</p>\n<p>A regra parece estranha, n\u00e3o \u00e9 mesmo? Mas a gente nem precisa entender a l\u00f3gica dela. O seu programa deve apenas determinar, dadas as tr\u00eas posi\u00e7\u00f5es L,R e D, se h\u00e1 ou n\u00e3o impedimento, implementando exatamente a condi\u00e7\u00e3o acima. A figura abaixo mostra um exemplo onde \\bf n\u00e3o h\u00e1 impedimento:</p>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/151/__capa.jpg\" /></p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A entrada \u00e9 composta de apenas uma linha, contendo os tr\u00eas inteiros L, R e D.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Seu programa deve produzir uma \u00fanica linha, contendo um \u00fanico caractere, que deve ser \u201cS\u201d caso haja impedimento, ou \u201cN\u201d caso contr\u00e1rio.</li>\n</ul>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<ul>\n<li>0 \u2264 L \u2264 100</li>\n<li>0 \u2264 R \u2264 100</li>\n<li>0 \u2264 D \u2264 100</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n35 60 75\n========\nN\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n55 68 67\n========\nS\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n66 80 80\n========\nN\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=01\ninput=35 60 75\noutput=\"N\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=55 68 67\noutput=\"S\n\"\ngrade reduction=100%\n\n\ncase=03\ninput=66 80 80\noutput=\"N\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n\nint main(){\n    int L = 0;\n    int R = 0;\n    int D = 0;\n\n    scanf(\"%d %d %d\", &L, &R, &D);\n\n    if(R > 50 && L < R){\n        if(R > D)\n            printf(\"S\\n\");\n        else\n            printf(\"N\\n\");\n    }else{\n        printf(\"N\\n\");\n    }\n}"
    }
  ],
  "requiredFile": null
}