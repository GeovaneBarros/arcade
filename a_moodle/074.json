{
  "name": "@074 #04_vet L3 - OBI 2017 - Fase 1 - Botas Trocadas\n",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@074 #04_vet L3 - OBI 2017 - Fase 1 - Botas Trocadas</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"vet-l3---obi-2017---fase-1---botas-trocadas\"><span class=\"citation\" data-cites=\"074\">@074</span> #04_vet L3 - OBI 2017 - Fase 1 - Botas Trocadas</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/074/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>A divis\u00e3o de Suprimentos de Botas e Cal\u00e7ados do Ex\u00e9rcito comprou um grande n\u00famero de pares de botas de v\u00e1rios tamanhos para seus soldados. No entanto, por uma falha de empacotamento da f\u00e1brica contratada, nem todas as caixas entregues continham um par de botas correto, com duas botas do mesmo tamanho, uma para cada p\u00e9. O sargento mandou que os recrutas retirassem todas as botas de todas as caixas para reembal\u00e1-las, desta vez corretamente.</p>\n<p>Quando o sargento descobriu que voc\u00ea sabia programar, ele solicitou com a gentileza habitual que voc\u00ea escrevesse um programa que, dada a lista contendo a descri\u00e7\u00e3o de cada bota entregue, determina quantos pares corretos de botas poder\u00e3o ser formados no total.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A primeira linha da entrada cont\u00e9m um inteiro N indicando o n\u00famero de botas individuais entregues. Cada uma das N linhas seguintes descreve uma bota, contendo um n\u00famero inteiro M e uma letra L, separados por um espa\u00e7o em branco. M indica o n\u00famero do tamanho da bota e L indica o p\u00e9 da bota: L= \u2018D\u2019 indica que a bota \u00e9 para o p\u00e9 direito, L= \u2018E\u2019 indica que a bota \u00e9 para o p\u00e9 esquerdo.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Seu programa deve imprimir uma \u00fanica linha contendo um \u00fanico n\u00famero inteiro indicando o n\u00famero total de pares corretos de botas que podem ser formados.</li>\n</ul>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<ul>\n<li>2 \u2264 N \u2264 104</li>\n<li>N \u00e9 par</li>\n<li>30 \u2264 M \u2264 60</li>\n<li>L \u00e9 o caractere \u2018D\u2019 ou o caractere \u2018E\u2019</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n40 D\n41 E\n41 D\n40 E\n========\n2\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n6\n38 E\n39 E\n40 D\n38 D\n40 D\n37 E\n========\n1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<!---\n>>>>>>>> 01\n10\n30 E\n31 E\n31 D\n31 E\n30 D\n31 D\n31 D\n31 E\n30 D\n31 D\n========\n4\n<<<<<<<<\n\n>>>>>>>> 02\n10\n44 D\n40 E\n44 D\n43 E\n42 E\n40 D\n41 D\n42 D\n43 D\n43 E\n========\n3\n<<<<<<<<\n\n>>>>>>>> 03\n10\n59 D\n59 E\n59 D\n60 D\n59 D\n60 D\n60 E\n59 E\n59 D\n60 D\n========\n3\n<<<<<<<<\n\n>>>>>>>> 04\n12\n56 D\n59 D\n58 E\n56 D\n60 E\n56 D\n57 E\n59 E\n58 D\n56 D\n57 D\n60 E\n========\n3\n<<<<<<<<\n--->\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=01\ninput=4\n40 D\n41 E\n41 D\n40 E\noutput=\"2\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=6\n38 E\n39 E\n40 D\n38 D\n40 D\n37 E\noutput=\"1\n\"\ngrade reduction=100%\n\n\ncase=03\ninput=10\n30 E\n31 E\n31 D\n31 E\n30 D\n31 D\n31 D\n31 E\n30 D\n31 D\noutput=\"4\n\"\ngrade reduction=100%\n\n\ncase=04\ninput=10\n44 D\n40 E\n44 D\n43 E\n42 E\n40 D\n41 D\n42 D\n43 D\n43 E\noutput=\"3\n\"\ngrade reduction=100%\n\n\ncase=05\ninput=10\n59 D\n59 E\n59 D\n60 D\n59 D\n60 D\n60 E\n59 E\n59 D\n60 D\noutput=\"3\n\"\ngrade reduction=100%\n\n\ncase=06\ninput=12\n56 D\n59 D\n58 E\n56 D\n60 E\n56 D\n57 E\n59 E\n58 D\n56 D\n57 D\n60 E\noutput=\"3\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "/*\n * Solu\u00e7\u00e3o para o problema Botas\n * Wanderley Guimar\u00e3es\n */\n#include <stdio.h>\n\nint\nmin (int a, int b){\n    if (a < b)\n        return a;\n    return b;\n}\n\n#define MAX_NUM_PE 61\nint N, pe_esquerdo[MAX_NUM_PE], pe_direito[MAX_NUM_PE];\n\nint\nmain (){\n    int  numero, i;\n    char lado;\n    \n    scanf (\"%d\", &N);\n    \n    for (i = 0; i < MAX_NUM_PE; i++)\n        pe_esquerdo[i] = pe_direito[i] = 0;\n    for (i = 0; i < N; i++){\n        scanf (\"%d %c \", &numero, &lado);\n        if (lado == 'E')\n            pe_esquerdo[numero]++;\n        else\n            pe_direito[numero]++;\n    }\n    int ret = 0;\n    for (i = 0; i < MAX_NUM_PE; i++)\n        ret += min (pe_esquerdo[i], pe_direito[i]);\n    printf (\"%d\\n\", ret);\n    \n    return 0;\n}"
    }
  ],
  "requiredFile": null
}