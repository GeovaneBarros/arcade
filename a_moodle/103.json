{
  "name": "@103 #05_str L3 - Separe Pneumatocito - Separa\u00e7\u00e3o de Palavras!",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@103 #05_str L3 - Separe Pneumatocito - Separa\u00e7\u00e3o de Palavras\\!</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"str-l3---separe-pneumatocito---separa\u00e7\u00e3o-de-palavras\">#05_str L3 - Separe Pneumatocito - Separa\u00e7\u00e3o de Palavras!</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/103/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>- Menino solta esse tal de Angri Bids e vai estudar que tem prova de portugu\u00eas amanh\u00e3.<br />\n- J\u00e1 sei de tudo m\u00e3e.<br />\n- Ent\u00e3o me diga as 3 excess\u00f5es de separa\u00e7\u00e3o e as 3 excess\u00f5es de n\u00e3o separa\u00e7\u00e3o.<br />\nQue a professora mandou voc\u00ea estudar do site <a href=\"http://www.coladaweb.com/portugues/regras-para-divisao-silabica\">http://www.coladaweb.com/portugues/regras-para-divisao-silabica</a>.<br />\n- Que exce\u00e7\u00f5es m\u00e3e, s\u00f3 com a regra b\u00e1sica j\u00e1 d\u00e1 pra tirar a m\u00e9dia. Se eu achar uma consoante depois de uma vogal eu separo a s\u00edlaba!<br />\nQuase levando uma voadora do subzero, Pedrinho tem seu celular arrancado da m\u00e3o e leva um grito na orelha!<br />\n- Se fosse pra para tirar a m\u00e9dia eu n\u00e3o pagava 600 reais de mensalidade.<br />\nAgora s\u00f3 devolvo seu celular quando voc\u00ea souber separar pneumoradiologia.<br />\n- M\u00e3e, pra essa da\u00ed voc\u00ea s\u00f3 precisa da regra b\u00e1sica.<br />\n- Pedrinho, j\u00e1 de castigo!</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Fa\u00e7a um programa que receba uma palavra e separe suas silabas levando em considera\u00e7\u00e3o o seguinte crit\u00e9rio:<br />\nSe ap\u00f3s uma vogal existir uma consoante, deve-se separar a s\u00edlaba.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Uma linha com um texto.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>O mesmo texto com <strong>- (h\u00edfen)</strong> entre as s\u00edlabas.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nParalelepipedo\n========\nPa-ra-le-le-pi-pe-do\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nEu sou o rei de Fup\n========\nEu sou o rei de Fu-p\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nFloresta Amazonica\n========\nFlo-re-sta A-ma-zo-ni-ca\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h1 id=\"section\"></h1>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=00\ninput=Paralelepipedo\noutput=\"Pa-ra-le-le-pi-pe-do\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=Floresta Amazonica\noutput=\"Flo-re-sta A-ma-zo-ni-ca\n\"\ngrade reduction=100%\n\n\ncase=01\ninput=Eu sou o rei de Fup\noutput=\"Eu sou o rei de Fu-p\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n#include <stdbool.h>\n\nbool verifica_vogal(char value){\n    if(value == 'a' || value == 'A' || value == 'e' || value == 'E' || value == 'i' || value == 'I' || value == 'o' || value == 'O' || value == 'u' || value == 'U')\n        return true;\n    return false;\n}\n\nint main(){\n    char texto[50];\n    scanf(\"%[^\\n]\", texto);\n\n    for(int a = 0; texto[a]; a++){\n        printf(\"%c\", texto[a]);\n        if(verifica_vogal(texto[a]) && !verifica_vogal(texto[a + 1]) && texto[a + 1] != ' ' && texto[a + 1])\n            printf(\"-\");\n    }\n    printf(\"\\n\");\n}"
    },
    {
      "name": "solver.cpp.txt",
      "contents": "#include <iostream>\n\nusing namespace std;\n\nbool is_vogal(char a){\n    string vog = \"aeiouAEIOU\";\n    for(int i = 0; i < 10; i++) {\n        if(a == vog[i])\n            return true;\n    }\n    return false;\n}\n\nstring separa_silaba(string a){\n    string nova = \"\";\n    int i = 0;\n    while(a[i] != '\\0'){\n        nova += a[i];\n        if((a[i] == ' ') || (a[i + 1] == ' ') || (a[i + 1] == '\\0')){\n            i++;\n            continue;\n        }\n        if( (is_vogal(a[i]) == true) && (is_vogal(a[i + 1]) == false))\n            nova += \"-\";\n        i++;\n    }\n    return nova;\n}\n\nint main() {\n    string palavra;\n    getline(cin, palavra);\n    cout << separa_silaba(palavra) << endl;\n    return 0;\n}"
    }
  ],
  "requiredFile": null
}